{
	// Place your snippets for rust here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New Function": {
		"description": "Creates new function",
		"body": ["fn $1($2)-> $3{", "\t$0", "}"],
		"prefix": "fn"
	},
	"Elif statement": {
		"description": "Creates if statement with 'else if'",
		"body": [
			"if $1 {",
			"\t$2",
			"} else if $3 {",
			"\t$4",
			"} else {",
			"\t$0",
			"}"
		],
		"prefix": "elif"
	},
	"if else statement": {
		"description": "Creates if statement with 'else'",
		"body": ["if $1 {", "\t$2", "} else {", "\t$0", "}"],
		"prefix": "else"
	},
	"Struct": {
		"description": "Simple struct {} generator",
		"body": ["struct $1 {", "\t$2:$3,", "\t$0", "}"],
		"prefix": "str"
	},
	"Derive Generator": {
		"body": "#[derive($0)]",
		"prefix": "derive",
		"description": "helper for writing derives because i'm lazy"
	},
	"pub async fn": {
		"prefix": "pafn",
		"body": ["pub async fn $1($2) -> $3 {", "\t$0", "}"],
		"description": "async function"
	},
	// async fn snippet
	"async fn": {
		"prefix": "asfn",
		"body": ["async fn $1($2) -> $3 {", "\t$0", "}"],
		"description": "async function"
	}
}
